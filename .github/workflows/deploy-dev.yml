name: deploy-dev

on:
  push:
    branches:
      - deploy-dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SSH_KEY: ${{ secrets.DEV_SSH_KEY }}
      HOST: ${{ secrets.DEV_HOST }}
      USER: ${{ secrets.DEV_USER }}
      DIR: ${{ secrets.DEV_NEXT_APP_DIR }}

    steps:
      - name: Checking directory in instance
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.DEV_SSH_KEY }}
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          envs: DIR
          script: |
            [ -d "$DIR" ] && echo "directory exists" || mkdir -p "$DIR"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.1.0"

      - name: Use pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.5.2
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build Next.js app
        run: |
          pnpm install
          cp .env.dev .env
          pnpm build

      - name: Prepare deployment
        run: |
          # 필요한 파일만 복사하기
          mkdir -p deployment
          cp -r .next deployment/
          cp -r public deployment/
          cp package.json pnpm-lock.yaml ecosystem.config.js deployment/
          cp .env.dev deployment/.env

      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          echo "$SSH_KEY" >> ~/.ssh/github-action
          chmod 400 ~/.ssh/github-action
          echo -e "Host github-actions\n\tUser "$USER"\n\tHostname "$HOST"\n\tIdentityFile ~/.ssh/github-action\n\tStrictHostKeyChecking No" >> ~/.ssh/config

      - name: Deploy to server
        run: |
          rsync -avzr --delete deployment/ github-actions:"$DIR"/

      - name: Install dependencies and restart service
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.DEV_SSH_KEY }}
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          script: |
            cd "$DIR"
            pnpm install --production
            pm2 reload ecosystem.config.js --env development || pm2 start ecosystem.config.js --env development
